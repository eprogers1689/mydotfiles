
_fishy_collapsed_wd() {
  echo $(pwd | perl -pe "
   BEGIN {
      binmode STDIN,  ':encoding(UTF-8)';
      binmode STDOUT, ':encoding(UTF-8)';
   }; s|^$HOME|~|g; s|/([^/])[^/]*(?=/)|/\$1|g
")
}

_get_aws_account(){
  aws_account_name=${AWS_PROFILE:u}
  if [[ "$aws_account_name" =~ "TEST" ]]; then
    echo "%{$fg_bold[green]%} $aws_account_name"
  elif [[ "$aws_account_name" =~ "QA" ]]; then
    echo "%{$fg_bold[yellow]%} $aws_account_name"
  elif [[ "$aws_account_name" =~ "PROD" ]]; then
    echo "%{$fg_bold[red]%} $aws_account_name"
  else
    echo "%{$fg_bold[blue]%} $aws_account_name"
  fi
}

_get_pulumi_backend_account(){
  PULUMI_CREDS_FILE=~/.pulumi/credentials.json
  if test -f "$PULUMI_CREDS_FILE"; then
    PULUMI_ACCOUNT_NUMBER=$(jq -r .current $PULUMI_CREDS_FILE | cut -d '-' -f4)
    echo $(jq -r ".accountList[] | select( .accountId == \"$PULUMI_ACCOUNT_NUMBER\" ) | .accountName" ~/.aws/sso_accounts.json | tr a-z A-Z)
  fi
}

_compare_aws_pulumi_account(){
  PULUMI=$( _get_pulumi_backend_account)
  AWS_ACCOUNT_NAME=${AWS_PROFILE:u}
  if [ ! -z ${AWS_PROFILE+x} ] && [ -n "$PULUMI" ]; then
    if [[ "$AWS_ACCOUNT_NAME" =~ "$PULUMI" ]]; then
      echo '🏆'
    else
      echo '❌'
    fi
  fi
}

_git_statuses() {
      # Check if we're in a Git repository
    if ! git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
        echo ""
        return
    fi
    git status -s >| /tmp/gitstatus.txt
    staged=$( cat /tmp/gitstatus.txt | grep -c "^[MARCD]")
    unstaged=$( cat /tmp/gitstatus.txt | grep -c "^.[MARCD]")
    untracked=$( cat /tmp/gitstatus.txt | grep -c "^\?")
    stashes=$(git stash list 2>/dev/null | wc -l | sed -e 's/^[ \t]*//')

    local statuses

    if [[ ${staged} != 0 ]] ; then
        statuses+=" %{$fg[green]%}${staged}%{$reset_color%}"
    fi

    if [[ ${unstaged} != 0 ]] ; then
        statuses+=" %{$fg[red]%}${unstaged}%{$reset_color%}"
    fi

    if [[ ${untracked} != 0 ]] ; then
        statuses+=" %{$fg[yellow]%}${untracked}%{$reset_color%}"
    fi

    if [[ ${stashes} != 0 ]] ; then
        statuses+=" %{$fg[gray]%}${stashes}%{$reset_color%}"
    fi

    echo "($statuses)"
}

exit_code='%(?.👌.👎)'
local user_color='cyan'; [ $UID -eq 0 ] && user_color='red'
# https://zsh.sourceforge.io/Doc/Release/Prompt-Expansion.html
PROMPT='%{$fg_bold[$user_color]%}$(_fishy_collapsed_wd)$(_get_aws_account)$(_compare_aws_pulumi_account)$exit_code $(git_prompt_info)%{$reset_color%}$(_git_statuses)%{$fg_bold[$user_color]%}%{$fg[green]%}%(!.#. $)%{$reset_color%} '
